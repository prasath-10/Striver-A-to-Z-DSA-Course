class Solution {
    public int max(int[] weights){
        int maximum=weights[0];
        for(int i=1;i<weights.length;i++)
        {
            if(weights[i]>maximum)
            {
                maximum=weights[i];
            }
        }
        return maximum;
    }
    public int totalsum(int[] weights){
        int  sum=0;
        for(int i=0;i<weights.length;i++){
            sum=sum+weights[i];
        }
        return sum;
    }
    public int totaldays(int[] weights,int cap){
        int day=1;
        int load=0;
        for(int i=0;i<weights.length;i++){
            if(load+weights[i] > cap){
                day=day+1;
                load=weights[i];
            }
            else{
                load=load+weights[i];
            }
        }
        return day;
    }
    public int shipWithinDays(int[] weights, int days) {
        int low=max(weights);
        System.out.println(low);
        int  high=totalsum(weights);
        System.out.println(high);
        while(low <= high){
            int mid=(low+high)/2;
            int no_of_days=totaldays(weights,mid);
            if(no_of_days <= days){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return low;
        
    }
}
