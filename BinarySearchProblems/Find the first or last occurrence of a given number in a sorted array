class Solution {
    public int firstoccurance(int[]nums,int target){
        int start=0;
        int end=nums.length-1;
        int first=-1;
        while(start<=end)
        {
            int mid=(start+end)/2;
            if(nums[mid]==target)
            {
                first=mid;
                end=mid-1;
            }
            else if(nums[mid]<target)
            {
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return first;
    }
    public int lastoccurance(int[]nums,int target){
        int start=0;
        int end=nums.length-1;
        int last=-1;
        while(start<=end)
        {
            int mid=(start+end)/2;
            if(nums[mid]==target)
            {
                last=mid;
                start=mid+1;
            }
            else if(nums[mid]<target)
            {
                start=mid+1;
            }
            else
            {
                end=mid-1;
            }
        }
        return last;
    }
    public int[] searchRange(int[] nums, int target) {
        int first=firstoccurance(nums,target);
        if(first==-1){
            return new int[]{-1,-1};
        }
        int last=lastoccurance(nums,target);
        return  new int[]{first,last};
        
    }
}
